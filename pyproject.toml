[tool.poetry]
name = "lbc-tracking-scraper"
version = "0.1.0"
description = ""
authors = ["coarse <iampeioris@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
lxml = "^5.3.0"
fastapi = "^0.112.0"
cloudscraper = "^1.2.71"
types-lxml = "^2024.8.7"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
fastapi = {extras = ["standard"], version = "^0.112.0"}

[tool.ruff]
line-length = 88
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

